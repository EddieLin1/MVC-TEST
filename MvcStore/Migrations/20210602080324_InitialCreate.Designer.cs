// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcStore.Data;

namespace MvcStore.Migrations
{
    [DbContext(typeof(StoreDBContext))]
    [Migration("20210602080324_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("MvcStore.Models.Cart", b =>
                {
                    b.Property<double>("CartId")
                        .HasColumnType("float");

                    b.Property<double>("CartTotal")
                        .HasColumnType("float");

                    b.Property<bool>("Purchased")
                        .HasColumnType("bit");

                    b.HasKey("CartId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("MvcStore.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("MvcStore.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("QuantitySold")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ItemsRepo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Yellow/Green bananas, high in potassium",
                            Name = "Bananas (Bunch)",
                            Price = 1.95,
                            QuantitySold = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Long and green and high in minerals good for skin",
                            Name = "English Cucumbers",
                            Price = 2.48,
                            QuantitySold = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Sweet and red strawberries, very juicy",
                            Name = "Strawberries",
                            Price = 4.9800000000000004,
                            QuantitySold = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Long green stalks, also called \"Scallions\"",
                            Name = "Green Onion",
                            Price = 0.97999999999999998,
                            QuantitySold = 0
                        },
                        new
                        {
                            Id = 5,
                            Description = "Grade A large omega 3 eggs",
                            Name = "Eggs",
                            Price = 3.98,
                            QuantitySold = 0
                        },
                        new
                        {
                            Id = 6,
                            Description = "Green Avocados from Mexico",
                            Name = "Avocados (Bag)",
                            Price = 4.5899999999999999,
                            QuantitySold = 0
                        });
                });

            modelBuilder.Entity("MvcStore.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State_Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.ToTable("OrderList");
                });

            modelBuilder.Entity("MvcStore.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
